# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  sdkVersion: '6.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(sdkVersion)'
  inputs:
    packageType: sdk 
    version: '$(sdkVersion)'

- task: Npm@1
  displayName: 'Npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'run gulp'

- script: 'echo "$(Build.defintionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore Project Dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

# following tasks replaced by template
#- task: DotNetCoreCLI@2
#  displayName: 'Build the project - $(buildConfiguration)'
#  inputs:
#    command: 'build'
#    arguments: '--no-restore --configuration $(buildConfiguration)'
#    projects: '**/*.csproj'

#- task: DotNetCoreCLI@2
#  displayName: 'Publish the project - $(buildConfiguration)'
#  inputs:
#    command: 'publish'
#    projects: '**/*.csproj'
#    publishWebProjects: false
#    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
#    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact: drop'
  condition: succeeded()